@page "/fetchdata"
@using global::Shared.Models
@using BlazorWasm.Services
@inject IWeatherService weatherService
@attribute [Authorize]

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>
@if (!string.IsNullOrEmpty(errorLabel))
{
    <label>@errorLabel</label>
}
@if (forecasts == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (F)</th>
            <th>Summary</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var forecast in forecasts)
        {
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private IEnumerable<WeatherForecast> forecasts = null!;
    private string errorLabel = "";
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            forecasts = await weatherService.GetWeather();
        }
        catch (Exception e)
        {
            errorLabel = e.Message;
        }
    }
}